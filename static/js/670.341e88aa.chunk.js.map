{"version":3,"file":"static/js/670.341e88aa.chunk.js","mappings":"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","sources":["views/ui/EditForms/EditIndustry.js","views/ui/Industries.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../../../assets/global.css';\r\n\r\nconst EditIndustry = ({ form, toggleFom, data }) => {\r\n\r\n  // console.log('Data prop in EditService:', data);\r\n  const { industryId, name: initialName, icon: initialIcon,descriptionLines:initialDesc } = data || {};\r\n\r\n  \r\n\r\n  const [name, setName] = useState(initialName || '');\r\n  const [descriptionLines, setDesc] = useState(initialDesc || '');\r\n  const [icon, setIcon] = useState(initialIcon || null);\r\n\r\n  const handelInput = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const handelDesc = (e) => {\r\n    setDesc(e.target.value);\r\n  };\r\n\r\n  const onhandeleditIcon = (e) => {    \r\n      setIcon(e.target.files[0]);\r\n  };\r\n\r\nconst config = {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  };\r\n  const handelEdit = (e) => {\r\n    e.preventDefault();\r\n    console.log('Name:', name);\r\n    console.log('Icon:', icon);\r\n    const formData = new FormData();\r\n    formData.append('name', name);\r\n    formData.append('descriptionLines',descriptionLines);\r\n    formData.append('Icon',icon);\r\n    axios\r\n      .put(`http://emc2db-001-site1.itempurl.com/api/Industry/UpdateIndustry/${industryId}`, formData,config)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        \r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n       \r\n      });\r\n\r\n    // Close the form after submission\r\n    toggleFom();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Reset form fields if data changes\r\n    setName(initialName || '');\r\n    setIcon(initialIcon || null);\r\n  }, [initialName, initialIcon,industryId]);\r\n\r\n  return (\r\n    <>\r\n      {form && (\r\n        <div className=\"overlay min-h-screen flex items-center justify-center\">\r\n          <div className=\"form bg-white p-8 rounded shadow-md w-full max-w-md\">\r\n            <form className=\"popup\" onSubmit={handelEdit}>\r\n              <div className=\"mb-4\">\r\n                <label htmlFor=\"text-input\" className=\"block text-sm font-bold text-gray-700\">\r\n                  Name:\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"text-input\"\r\n                  name=\"text-input\"\r\n                  placeholder=\"Enter text\"\r\n                  className=\"w-full px-3 py-2 border rounded mt-1\"\r\n                  onChange={handelInput}\r\n                  value={name}\r\n                />\r\n              </div>\r\n              <div className=\"mb-4\">\r\n                <label htmlFor=\"text-input\" className=\"block text-sm font-bold text-gray-700\">\r\n                  Description:\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"text-input\"\r\n                  name=\"text-input\"\r\n                  placeholder=\"Enter text\"\r\n                  className=\"w-full px-3 py-2 border rounded mt-1\"\r\n                  onChange={handelDesc}\r\n                  value={descriptionLines}\r\n                />\r\n              </div>\r\n              <div className=\"mb-4\">\r\n                <label htmlFor=\"file-input\" className=\"block text-sm font-bold text-gray-700\">\r\n                  Icon:\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"file-input\"\r\n                  name=\"file-input\"\r\n                  className=\"w-full px-3 py-2 border rounded mt-1\"\r\n                  onChange={onhandeleditIcon}\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </form>\r\n            <button className=\"close-btn btn btn-danger py-0 px-2 rounded-t-sm\" onClick={toggleFom}>\r\n              x\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditIndustry;\r\n\r\n","import { useEffect, useState } from \"react\";\nimport {\n  Card,\n  Row,\n  Col,\n  CardTitle,\n  CardBody,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport EditIndustry from \"./EditForms/EditIndustry\";\n\nconst Industries = () => {\n  //add another technology for hover\n  const [techFields, setTechFields] = useState([1]);\n\n  const addTech = () => {\n    setTechFields([...techFields,[]]);\n    console.log(techFields);\n  };\n  \n  ///////////post data//////////////////\n  const baseUrl='http://emc2db-001-site1.itempurl.com' \n  const urlPost='/api/Industry/AddIndustry'\n  const [industry,setIndustry]=useState('')\n  const [icon,setIcon]=useState('')\n  const [tech,setTech]=useState([])\n\n  const onhandelName=(e)=>{\n    setIndustry(e.target.value)\n  }\n\n  const onhandelTech=(e)=>{\n    const newTech = e.target.value; \n      setTech([ newTech]);\n    \n  }\n  const onhandelIcon=(e)=>{\n    setIcon(e.target.files[0])\n  }\n  const config = {     \n    headers: { 'content-type': 'multipart/form-data' }\n}\n  const handelSubmit = (e) => {\n    // e.preventDefault();\n    const formData=new FormData()\n    formData.append('name',industry)\n    formData.append('descriptionLines',tech)\n    formData.append('icon',icon)\n    axios.post(`${baseUrl}${urlPost}`,formData,config).then(res=>{\n      console.log(res.data);\n    }).catch(err=>console.log(err)\n    )\n    setIndustry('')\n    setTech([])\n    setIcon('')\n  };\n  //////////////////get data/////////////\n  const [data,setData]=useState([])\n  const urlGet='/api/Industry/GetAlIndustries'\n\n  useEffect(() => {\n    // Make a GET request to fetch text data\n    axios.get(`${baseUrl}${urlGet}`)\n      .then(response => {\n        // Handle text data\n        setData(response.data);\n      })\n      .catch(error => {\n        console.error(\"Error fetching text data:\", error);\n      });\n  }, []);\n\n  //////////////update data//////////////\n  \n  //popup form\n  const [form,setForm]=useState(false)\n  //toggle form\n  const toggleFom=()=>{\n    setForm(!form)\n  }\n  //stop scrolling\n  if(form){\n    document.body.classList.add('active')\n  }\n  else{\n    document.body.classList.remove('active')\n  }\n  const [selectedIndustryId, setSelectedIndustryId] = useState(null);\n  const handleServiceClick = (id) => {\n    setSelectedIndustryId(id);\n  };\n  const findServiceById = (industryId) => {\n    return data.find((service) => service.industryId === industryId);\n  };\n  const EditIndustryComponent = selectedIndustryId && (\n    <EditIndustry\n    form={form} toggleFom={toggleFom} data={findServiceById(selectedIndustryId)}\n    />\n  );\n\n  ////////////delete record////////////////////\n  const handelDelete=(id)=>{\n    axios.delete(`${baseUrl}/api/Industry/DeleteIndustry/${id}`)\n    .then((res)=>{\n      console.log(res.data);\n    })\n  }\n\n\n  return (\n    <Row>\n      <Col>\n        <Card>\n          <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\n            <i className=\"bi bi-bell me-2 pe\"> </i>\n            Add new Industry\n          </CardTitle>\n          <CardBody>\n            <Form onSubmit={(e)=>handelSubmit(e)}>\n              <FormGroup>\n                <Label for=\"industryName\">Industry name</Label>\n                <Input\n                  id=\"industryName\"\n                  name=\"name\"\n                  placeholder=\"Add Industry name\"\n                  type=\"text\"\n                  onChange={(e)=>onhandelName(e)}\n                  value={industry}\n                />\n                <Label for=\"tech\">Technology</Label>\n                \n                  {\n                  techFields.map((field,i) => (\n                    <Input\n                      key={i}\n                      id={i}\n                      name=\"descriptionLines\"\n                      placeholder=\"Add Technology name\"\n                      type=\"text\"\n                      className=\"mt-2\"\n                      onChange={(e) => onhandelTech(e)}\n                      value={field.value}\n                    />\n                  ))\n                }\n                <Button\n                  className=\"btn mt-2 btn-primary\"\n                  color=\"primary\"\n                  onClick={ addTech}>\n                  Add another tech\n                </Button>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"exampleFile\">Add Icon</Label>\n                <Input id=\"exampleFile\" name=\"icon\" type=\"file\" onChange={e=>onhandelIcon(e)}/>\n              </FormGroup>\n              <Button className=\"btn mt-2 btn-primary\" color=\"primary\">\n                Add\n              </Button>\n            </Form>\n          </CardBody>\n        </Card>\n      </Col>\n      {/* tabel */}\n      <Row>\n        <Col lg=\"12\">\n          <div>\n            <Card>\n              <CardBody>\n                <CardTitle tag=\"h5\">Industries We Serve</CardTitle>\n                <Table\n                  className=\"no-wrap mt-3 align-middle\"\n                  responsive\n                  borderless\n                >\n                  <thead>\n                    <tr>\n                      <th>Industry name</th>\n                      <th>Industry Icon</th>\n                      <th>Technologies</th>\n                      <th>Edit</th>\n                      <th>Delete</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {data.map((tdata, index) => (\n                      <tr key={index} className=\"border-top\" onClick={()=>handleServiceClick(tdata.industryId)}>\n                        <td>\n                          <div className=\"d-flex align-items-center p-2\">\n                            <div className=\"ms-3\">\n                              <h6 className=\"mb-0\">{tdata.name}</h6>\n                            </div>\n                          </div>\n                        </td>\n                        <td><img className=\"w-40\" src={`data:image/svg+xml;base64,${tdata.icon}`} alt=\"\"/>\n                          <img className=\"w-50\" src={`data:image/jpeg;charset=utf-8;base64,${tdata.icon}`} alt=\"\"/></td>\n                        <td>{tdata.descriptionLines.map((d,i)=>(<p key={i}>{d}</p>))}\n                          </td>\n                        <td>\n                          <button className=\"btn btn-primary\" color=\"info\" onClick={toggleFom}>\n                            Edit\n                          </button>\n                        </td>\n                        <td>\n                          <button className=\"btn btn-danger\" color=\"danger\" onClick={()=>handelDelete(tdata.industryId)}>\n                            Delete\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </div>\n        </Col>\n      </Row>\n      {EditIndustryComponent}\n    </Row>\n  );\n};\n\nexport default Industries;\n"],"names":["_ref","form","toggleFom","data","industryId","name","initialName","icon","initialIcon","descriptionLines","initialDesc","setName","useState","setDesc","setIcon","config","headers","useEffect","_jsx","_Fragment","children","className","_jsxs","onSubmit","e","preventDefault","console","log","formData","FormData","append","axios","put","concat","then","res","catch","err","response","htmlFor","type","id","placeholder","onChange","target","value","files","onClick","Industries","techFields","setTechFields","baseUrl","industry","setIndustry","tech","setTech","setData","get","error","setForm","document","body","classList","add","remove","selectedIndustryId","setSelectedIndustryId","EditIndustryComponent","EditIndustry","find","service","Row","Col","Card","CardTitle","tag","CardBody","Form","post","handelSubmit","FormGroup","Label","for","Input","onhandelName","map","field","i","newTech","onhandelTech","Button","color","addTech","onhandelIcon","lg","Table","responsive","borderless","tdata","index","handleServiceClick","src","alt","d","handelDelete","delete"],"sourceRoot":""}