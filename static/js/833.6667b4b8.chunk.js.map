{"version":3,"file":"static/js/833.6667b4b8.chunk.js","mappings":"mZAOA,MAAMA,EAAY,CAChB,CACEC,OAAQC,EACRC,KAAM,cACNC,MAAO,mBACPC,QAAS,cACTC,OAAQ,UACRC,MAAO,KACPC,OAAQ,OAEV,CACEP,OAAQQ,EACRN,KAAM,cACNC,MAAO,mBACPC,QAAS,mBACTC,OAAQ,OACRC,MAAO,KACPC,OAAQ,OAEV,CACEP,OAAQS,EACRP,KAAM,cACNC,MAAO,mBACPC,QAAS,cACTC,OAAQ,OACRC,MAAO,KACPC,OAAQ,OAEV,CACEP,OAAQU,EACRR,KAAM,cACNC,MAAO,mBACPC,QAAS,cACTC,OAAQ,UACRC,MAAO,KACPC,OAAQ,OAEV,CACEP,OAAQW,EACRT,KAAM,cACNC,MAAO,mBACPC,QAAS,cACTC,OAAQ,OACRC,MAAO,KACPC,OAAQ,QA8DZ,EA1DsBK,KAElBC,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACE,EAAAA,EAAI,CAAAD,UACHE,EAAAA,EAAAA,MAACC,EAAAA,EAAQ,CAAAH,SAAA,EACPD,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAACC,IAAI,KAAIL,SAAC,wBAEpBE,EAAAA,EAAAA,MAACI,EAAAA,EAAK,CAACC,UAAU,4BAA4BC,YAAU,EAACC,YAAU,EAAAT,SAAA,EAChED,EAAAA,EAAAA,KAAA,SAAAC,UACEE,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,eACJD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,aAEJD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,YACJD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,WACJD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,iBAGRD,EAAAA,EAAAA,KAAA,SAAAC,SACGf,EAAUyB,KAAI,CAACC,EAAOC,KACrBV,EAAAA,EAAAA,MAAA,MAAgBK,UAAU,aAAYP,SAAA,EACpCD,EAAAA,EAAAA,KAAA,MAAAC,UACEE,EAAAA,EAAAA,MAAA,OAAKK,UAAU,gCAA+BP,SAAA,EAC5CD,EAAAA,EAAAA,KAAA,OACEc,IAAKF,EAAMzB,OACXqB,UAAU,iBACVO,IAAI,SACJC,MAAM,KACNC,OAAO,QAETd,EAAAA,EAAAA,MAAA,OAAKK,UAAU,OAAMP,SAAA,EACnBD,EAAAA,EAAAA,KAAA,MAAIQ,UAAU,OAAMP,SAAEW,EAAMvB,QAC5BW,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,aAAYP,SAAEW,EAAMtB,iBAI1CU,EAAAA,EAAAA,KAAA,MAAAC,SAAKW,EAAMrB,WACXS,EAAAA,EAAAA,KAAA,MAAAC,SACoB,YAAjBW,EAAMpB,QACLQ,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,qDACG,SAAjBI,EAAMpB,QACRQ,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,uDAEhBR,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,yDAGpBR,EAAAA,EAAAA,KAAA,MAAAC,SAAKW,EAAMnB,SACXO,EAAAA,EAAAA,KAAA,MAAAC,SAAKW,EAAMlB,WA3BJmB,gB,iICxEzB,MA4DA,EA5DmBK,KACjB,MAAMC,EAAe,CACnBC,OAAQ,CACN,CACE/B,KAAM,YACNgC,KAAM,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,MAErC,CACEhC,KAAM,YACNgC,KAAM,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAGtCC,QAAS,CACPC,MAAO,CACLC,KAAM,QAERC,WAAY,CACVC,SAAS,GAEXC,KAAM,CACJC,gBAAiB,GAGnBC,OAAQ,CACNC,MAAO,SACPd,MAAO,GAETe,MAAO,CACLC,WAAY,CACV,MACA,MACA,QACA,QACA,MACA,OACA,OACA,UAKR,OACEhC,EAAAA,EAAAA,KAACE,EAAAA,EAAI,CAAAD,UACHE,EAAAA,EAAAA,MAACC,EAAAA,EAAQ,CAAAH,SAAA,EACPD,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAACC,IAAI,KAAIL,SAAC,mBACpBD,EAAAA,EAAAA,KAACiC,EAAAA,EAAY,CAACzB,UAAU,aAAaF,IAAI,KAAIL,SAAC,yBAG9CD,EAAAA,EAAAA,KAACkC,EAAAA,EAAK,CACJV,KAAK,OACLR,MAAM,OACNC,OAAO,MACPK,QAASH,EAAaG,QACtBF,OAAQD,EAAaC,aAGpB,E,0CChDX,MAAMe,EAAW,CACf,CACEC,MAAO,kBACPC,KAAM,aACNC,MAAO,UACPC,KAAM,gBAER,CACEH,MAAO,uBACPC,KAAM,eACNC,MAAO,OACPC,KAAM,gBAER,CACEH,MAAO,wBACPC,KAAM,YACNC,MAAO,SACPC,KAAM,gBAER,CACEH,MAAO,sBACPC,KAAM,kBACNC,MAAO,UACPC,KAAM,gBAER,CACEH,MAAO,kBACPC,KAAM,aACNC,MAAO,OACPC,KAAM,gBAER,CACEH,MAAO,wBACPC,KAAM,YACNC,MAAO,UACPC,KAAM,iBAwCV,EApCcC,KAEVxC,EAAAA,EAAAA,KAACE,EAAAA,EAAI,CAAAD,UACHE,EAAAA,EAAAA,MAACC,EAAAA,EAAQ,CAAAH,SAAA,EACPD,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAACC,IAAI,KAAIL,SAAC,WACpBD,EAAAA,EAAAA,KAACiC,EAAAA,EAAY,CAACzB,UAAU,kBAAkBF,IAAI,KAAIL,SAAC,wBAGnDD,EAAAA,EAAAA,KAACyC,EAAAA,EAAS,CAACC,OAAK,EAAClC,UAAU,OAAMP,SAC9BkC,EAASxB,KAAI,CAACgC,EAAM9B,KACnBV,EAAAA,EAAAA,MAACyC,EAAAA,EAAa,CAEZC,QAAM,EACNC,KAAK,IACLxC,IAAI,IACJE,UAAU,yCAAwCP,SAAA,EAElDD,EAAAA,EAAAA,KAAC+C,EAAAA,EAAM,CACLvC,UAAU,sBACVwC,KAAK,KACLV,MAAOK,EAAKL,MAAMrC,UAElBD,EAAAA,EAAAA,KAAA,KAAGQ,UAAWmC,EAAKN,SAEpBM,EAAKP,OACNpC,EAAAA,EAAAA,KAAA,SAAOQ,UAAU,gCAA+BP,SAC7C0C,EAAKJ,SAfH1B,Y,cC3DnB,MAkBA,EAlBkBoC,IAEdjD,EAAAA,EAAAA,KAACE,EAAAA,EAAI,CAAAD,UACHD,EAAAA,EAAAA,KAACI,EAAAA,EAAQ,CAAAH,UACPE,EAAAA,EAAAA,MAAA,OAAKK,UAAU,SAAQP,SAAA,EACrBD,EAAAA,EAAAA,KAAA,OAAKQ,UAAS,oCAAA0C,OAAsCD,EAAME,IAAKlD,UAC7DD,EAAAA,EAAAA,KAAA,KAAGQ,UAAWyC,EAAMZ,UAEtBlC,EAAAA,EAAAA,MAAA,OAAKK,UAAU,OAAMP,SAAA,EACnBD,EAAAA,EAAAA,KAAA,MAAIQ,UAAU,wBAAuBP,SAAEgD,EAAMG,WAC7CpD,EAAAA,EAAAA,KAAA,SAAOQ,UAAU,aAAYP,SAAEgD,EAAMI,qB,wBCFjD,MAcA,EAdcJ,IAEV9C,EAAAA,EAAAA,MAACD,EAAAA,EAAI,CAAAD,SAAA,EACHD,EAAAA,EAAAA,KAACsD,EAAAA,EAAO,CAACvC,IAAI,iBAAiBD,IAAKmC,EAAMM,SACzCpD,EAAAA,EAAAA,MAACC,EAAAA,EAAQ,CAACI,UAAU,MAAKP,SAAA,EACvBD,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAACC,IAAI,KAAIL,SAAEgD,EAAMb,SAC3BpC,EAAAA,EAAAA,KAACiC,EAAAA,EAAY,CAAAhC,SAAEgD,EAAMI,YACrBrD,EAAAA,EAAAA,KAACwD,EAAAA,EAAQ,CAAChD,UAAU,OAAMP,SAAEgD,EAAMQ,QAClCzD,EAAAA,EAAAA,KAAC+C,EAAAA,EAAM,CAACT,MAAOW,EAAMX,MAAMrC,SAAC,oBCP9ByD,EAAW,CACf,CACEH,M,gDACAnB,MAAO,sBACPiB,SAAU,qBACVM,YACE,8FACFC,MAAO,WAET,CACEL,M,gDACAnB,MAAO,sBACPiB,SAAU,qBACVM,YACE,8FACFC,MAAO,WAET,CACEL,M,gDACAnB,MAAO,kBACPiB,SAAU,qBACVM,YACE,8FACFC,MAAO,WAET,CACEL,M,gDACAnB,MAAO,sBACPiB,SAAU,qBACVM,YACE,8FACFC,MAAO,YA+EX,EA3EgBC,KAEZ1D,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EAEEE,EAAAA,EAAAA,MAAC2D,EAAAA,EAAG,CAAA7D,SAAA,EACFD,EAAAA,EAAAA,KAAC+D,EAAAA,EAAG,CAACC,GAAG,IAAIC,GAAG,IAAGhE,UAChBD,EAAAA,EAAAA,KAACkE,EAAQ,CACPf,GAAG,gCACHf,MAAM,SACNiB,SAAS,iBACTD,QAAQ,OACRf,KAAK,oBAGTrC,EAAAA,EAAAA,KAAC+D,EAAAA,EAAG,CAACC,GAAG,IAAIC,GAAG,IAAGhE,UAChBD,EAAAA,EAAAA,KAACkE,EAAQ,CACPf,GAAG,8BACHf,MAAM,UACNiB,SAAS,eACTD,QAAQ,MACRf,KAAK,kBAGTrC,EAAAA,EAAAA,KAAC+D,EAAAA,EAAG,CAACC,GAAG,IAAIC,GAAG,IAAGhE,UAChBD,EAAAA,EAAAA,KAACkE,EAAQ,CACPf,GAAG,gCACHf,MAAM,cACNiB,SAAS,iBACTD,QAAQ,MACRf,KAAK,qBAGTrC,EAAAA,EAAAA,KAAC+D,EAAAA,EAAG,CAACC,GAAG,IAAIC,GAAG,IAAGhE,UAChBD,EAAAA,EAAAA,KAACkE,EAAQ,CACPf,GAAG,0BACHf,MAAM,QACNiB,SAAS,eACTD,QAAQ,MACRf,KAAK,oBAKXlC,EAAAA,EAAAA,MAAC2D,EAAAA,EAAG,CAAA7D,SAAA,EACFD,EAAAA,EAAAA,KAAC+D,EAAAA,EAAG,CAACC,GAAG,IAAIC,GAAG,IAAIE,GAAG,IAAIC,IAAI,IAAGnE,UAC/BD,EAAAA,EAAAA,KAACkB,EAAU,OAEblB,EAAAA,EAAAA,KAAC+D,EAAAA,EAAG,CAACC,GAAG,IAAIC,GAAG,IAAIE,GAAG,IAAIC,IAAI,IAAGnE,UAC/BD,EAAAA,EAAAA,KAACwC,EAAK,UAIVxC,EAAAA,EAAAA,KAAC8D,EAAAA,EAAG,CAAA7D,UACFD,EAAAA,EAAAA,KAAC+D,EAAAA,EAAG,CAACE,GAAG,KAAIhE,UACVD,EAAAA,EAAAA,KAACD,EAAAA,EAAa,SAIlBC,EAAAA,EAAAA,KAAC8D,EAAAA,EAAG,CAAA7D,SACDyD,EAAS/C,KAAI,CAAC0D,EAAKxD,KAClBb,EAAAA,EAAAA,KAAC+D,EAAAA,EAAG,CAACC,GAAG,IAAIC,GAAG,IAAIE,GAAG,IAAGlE,UACvBD,EAAAA,EAAAA,KAACsE,EAAI,CACHf,MAAOc,EAAId,MACXnB,MAAOiC,EAAIjC,MACXiB,SAAUgB,EAAIhB,SACdI,KAAMY,EAAIV,YACVrB,MAAO+B,EAAIT,SANgB/C,S","sources":["components/dashboard/ProjectTable.js","components/dashboard/SalesChart.js","components/dashboard/Feeds.js","components/dashboard/TopCards.js","components/dashboard/Blog.js","views/Starter.js"],"sourcesContent":["import { Card, CardBody, CardTitle, CardSubtitle, Table } from \"reactstrap\";\nimport user1 from \"../../assets/images/users/user1.jpg\";\nimport user2 from \"../../assets/images/users/user2.jpg\";\nimport user3 from \"../../assets/images/users/user3.jpg\";\nimport user4 from \"../../assets/images/users/user4.jpg\";\nimport user5 from \"../../assets/images/users/user5.jpg\";\n\nconst tableData = [\n  {\n    avatar: user1,\n    name: \"Hanna Gover\",\n    email: \"hgover@gmail.com\",\n    project: \"Flexy React\",\n    status: \"pending\",\n    weeks: \"35\",\n    budget: \"95K\",\n  },\n  {\n    avatar: user2,\n    name: \"Hanna Gover\",\n    email: \"hgover@gmail.com\",\n    project: \"Lading pro React\",\n    status: \"done\",\n    weeks: \"35\",\n    budget: \"95K\",\n  },\n  {\n    avatar: user3,\n    name: \"Hanna Gover\",\n    email: \"hgover@gmail.com\",\n    project: \"Elite React\",\n    status: \"holt\",\n    weeks: \"35\",\n    budget: \"95K\",\n  },\n  {\n    avatar: user4,\n    name: \"Hanna Gover\",\n    email: \"hgover@gmail.com\",\n    project: \"Flexy React\",\n    status: \"pending\",\n    weeks: \"35\",\n    budget: \"95K\",\n  },\n  {\n    avatar: user5,\n    name: \"Hanna Gover\",\n    email: \"hgover@gmail.com\",\n    project: \"Ample React\",\n    status: \"done\",\n    weeks: \"35\",\n    budget: \"95K\",\n  },\n];\n\nconst ProjectTables = () => {\n  return (\n    <div>\n      <Card>\n        <CardBody>\n          <CardTitle tag=\"h5\"> Services we offer</CardTitle>\n\n          <Table className=\"no-wrap mt-3 align-middle\" responsive borderless>\n            <thead>\n              <tr>\n                <th>Team Lead</th>\n                <th>Project</th>\n\n                <th>Status</th>\n                <th>Weeks</th>\n                <th>Budget</th>\n              </tr>\n            </thead>\n            <tbody>\n              {tableData.map((tdata, index) => (\n                <tr key={index} className=\"border-top\">\n                  <td>\n                    <div className=\"d-flex align-items-center p-2\">\n                      <img\n                        src={tdata.avatar}\n                        className=\"rounded-circle\"\n                        alt=\"avatar\"\n                        width=\"45\"\n                        height=\"45\"\n                      />\n                      <div className=\"ms-3\">\n                        <h6 className=\"mb-0\">{tdata.name}</h6>\n                        <span className=\"text-muted\">{tdata.email}</span>\n                      </div>\n                    </div>\n                  </td>\n                  <td>{tdata.project}</td>\n                  <td>\n                    {tdata.status === \"pending\" ? (\n                      <span className=\"p-2 bg-danger rounded-circle d-inline-block ms-3\"></span>\n                    ) : tdata.status === \"holt\" ? (\n                      <span className=\"p-2 bg-warning rounded-circle d-inline-block ms-3\"></span>\n                    ) : (\n                      <span className=\"p-2 bg-success rounded-circle d-inline-block ms-3\"></span>\n                    )}\n                  </td>\n                  <td>{tdata.weeks}</td>\n                  <td>{tdata.budget}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n\nexport default ProjectTables;\n","import { Card, CardBody, CardSubtitle, CardTitle } from \"reactstrap\";\nimport Chart from \"react-apexcharts\";\n\nconst SalesChart = () => {\n  const chartoptions = {\n    series: [\n      {\n        name: \"Iphone 13\",\n        data: [0, 31, 40, 28, 51, 42, 109, 100],\n      },\n      {\n        name: \"Oneplue 9\",\n        data: [0, 11, 32, 45, 32, 34, 52, 41],\n      },\n    ],\n    options: {\n      chart: {\n        type: \"area\",\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      grid: {\n        strokeDashArray: 3,\n      },\n\n      stroke: {\n        curve: \"smooth\",\n        width: 1,\n      },\n      xaxis: {\n        categories: [\n          \"Jan\",\n          \"Feb\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"Aug\",\n        ],\n      },\n    },\n  };\n  return (\n    <Card>\n      <CardBody>\n        <CardTitle tag=\"h5\">Sales Summary</CardTitle>\n        <CardSubtitle className=\"text-muted\" tag=\"h6\">\n          Yearly Sales Report\n        </CardSubtitle>\n        <Chart\n          type=\"area\"\n          width=\"100%\"\n          height=\"390\"\n          options={chartoptions.options}\n          series={chartoptions.series}\n        ></Chart>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default SalesChart;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  ListGroup,\n  CardSubtitle,\n  ListGroupItem,\n  Button,\n} from \"reactstrap\";\n\nconst FeedData = [\n  {\n    title: \"Cras justo odio\",\n    icon: \"bi bi-bell\",\n    color: \"primary\",\n    date: \"6 minute ago\",\n  },\n  {\n    title: \"New user registered.\",\n    icon: \"bi bi-person\",\n    color: \"info\",\n    date: \"6 minute ago\",\n  },\n  {\n    title: \"Server #1 overloaded.\",\n    icon: \"bi bi-hdd\",\n    color: \"danger\",\n    date: \"6 minute ago\",\n  },\n  {\n    title: \"New order received.\",\n    icon: \"bi bi-bag-check\",\n    color: \"success\",\n    date: \"6 minute ago\",\n  },\n  {\n    title: \"Cras justo odio\",\n    icon: \"bi bi-bell\",\n    color: \"dark\",\n    date: \"6 minute ago\",\n  },\n  {\n    title: \"Server #1 overloaded.\",\n    icon: \"bi bi-hdd\",\n    color: \"warning\",\n    date: \"6 minute ago\",\n  },\n];\n\nconst Feeds = () => {\n  return (\n    <Card>\n      <CardBody>\n        <CardTitle tag=\"h5\">Feeds</CardTitle>\n        <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\n          Widget you can use\n        </CardSubtitle>\n        <ListGroup flush className=\"mt-4\">\n          {FeedData.map((feed, index) => (\n            <ListGroupItem\n              key={index}\n              action\n              href=\"/\"\n              tag=\"a\"\n              className=\"d-flex align-items-center p-3 border-0\"\n            >\n              <Button\n                className=\"rounded-circle me-3\"\n                size=\"sm\"\n                color={feed.color}\n              >\n                <i className={feed.icon}></i>\n              </Button>\n              {feed.title}\n              <small className=\"ms-auto text-muted text-small\">\n                {feed.date}\n              </small>\n            </ListGroupItem>\n          ))}\n        </ListGroup>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default Feeds;\n","import { Card, CardBody } from \"reactstrap\";\n\nconst TopCards = (props) => {\n  return (\n    <Card>\n      <CardBody>\n        <div className=\"d-flex\">\n          <div className={`circle-box lg-box d-inline-block ${props.bg}`}>\n            <i className={props.icon}></i>\n          </div>\n          <div className=\"ms-3\">\n            <h3 className=\"mb-0 font-weight-bold\">{props.earning}</h3>\n            <small className=\"text-muted\">{props.subtitle}</small>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default TopCards;\n","import {\n  Card,\n  CardBody,\n  CardImg,\n  CardSubtitle,\n  CardText,\n  CardTitle,\n  Button,\n} from \"reactstrap\";\n\nconst Blog = (props) => {\n  return (\n    <Card>\n      <CardImg alt=\"Card image cap\" src={props.image} />\n      <CardBody className=\"p-4\">\n        <CardTitle tag=\"h5\">{props.title}</CardTitle>\n        <CardSubtitle>{props.subtitle}</CardSubtitle>\n        <CardText className=\"mt-3\">{props.text}</CardText>\n        <Button color={props.color}>Read More</Button>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default Blog;\n","import { Col, Row } from \"reactstrap\";\nimport SalesChart from \"../components/dashboard/SalesChart\";\nimport Feeds from \"../components/dashboard/Feeds\";\nimport ProjectTables from \"../components/dashboard/ProjectTable\";\nimport TopCards from \"../components/dashboard/TopCards\";\nimport Blog from \"../components/dashboard/Blog\";\nimport bg1 from \"../assets/images/bg/bg1.jpg\";\nimport bg2 from \"../assets/images/bg/bg2.jpg\";\nimport bg3 from \"../assets/images/bg/bg3.jpg\";\nimport bg4 from \"../assets/images/bg/bg4.jpg\";\n\nconst BlogData = [\n  {\n    image: bg1,\n    title: \"This is simple blog\",\n    subtitle: \"2 comments, 1 Like\",\n    description:\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\n    btnbg: \"primary\",\n  },\n  {\n    image: bg2,\n    title: \"Lets be simple blog\",\n    subtitle: \"2 comments, 1 Like\",\n    description:\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\n    btnbg: \"primary\",\n  },\n  {\n    image: bg3,\n    title: \"Don't Lamp blog\",\n    subtitle: \"2 comments, 1 Like\",\n    description:\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\n    btnbg: \"primary\",\n  },\n  {\n    image: bg4,\n    title: \"Simple is beautiful\",\n    subtitle: \"2 comments, 1 Like\",\n    description:\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\n    btnbg: \"primary\",\n  },\n];\n\nconst Starter = () => {\n  return (\n    <div>\n      {/***Top Cards***/}\n      <Row>\n        <Col sm=\"6\" lg=\"3\">\n          <TopCards\n            bg=\"bg-light-success text-success\"\n            title=\"Profit\"\n            subtitle=\"Yearly Earning\"\n            earning=\"$21k\"\n            icon=\"bi bi-wallet\"\n          />\n        </Col>\n        <Col sm=\"6\" lg=\"3\">\n          <TopCards\n            bg=\"bg-light-danger text-danger\"\n            title=\"Refunds\"\n            subtitle=\"Refund given\"\n            earning=\"$1k\"\n            icon=\"bi bi-coin\"\n          />\n        </Col>\n        <Col sm=\"6\" lg=\"3\">\n          <TopCards\n            bg=\"bg-light-warning text-warning\"\n            title=\"New Project\"\n            subtitle=\"Yearly Project\"\n            earning=\"456\"\n            icon=\"bi bi-basket3\"\n          />\n        </Col>\n        <Col sm=\"6\" lg=\"3\">\n          <TopCards\n            bg=\"bg-light-info text-into\"\n            title=\"Sales\"\n            subtitle=\"Weekly Sales\"\n            earning=\"210\"\n            icon=\"bi bi-bag\"\n          />\n        </Col>\n      </Row>\n      {/***Sales & Feed***/}\n      <Row>\n        <Col sm=\"6\" lg=\"6\" xl=\"7\" xxl=\"8\">\n          <SalesChart />\n        </Col>\n        <Col sm=\"6\" lg=\"6\" xl=\"5\" xxl=\"4\">\n          <Feeds />\n        </Col>\n      </Row>\n      {/***Table ***/}\n      <Row>\n        <Col lg=\"12\">\n          <ProjectTables />\n        </Col>\n      </Row>\n      {/***Blog Cards***/}\n      <Row>\n        {BlogData.map((blg, index) => (\n          <Col sm=\"6\" lg=\"6\" xl=\"3\" key={index}>\n            <Blog\n              image={blg.image}\n              title={blg.title}\n              subtitle={blg.subtitle}\n              text={blg.description}\n              color={blg.btnbg}\n            />\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n};\n\nexport default Starter;\n"],"names":["tableData","avatar","user1","name","email","project","status","weeks","budget","user2","user3","user4","user5","ProjectTables","_jsx","children","Card","_jsxs","CardBody","CardTitle","tag","Table","className","responsive","borderless","map","tdata","index","src","alt","width","height","SalesChart","chartoptions","series","data","options","chart","type","dataLabels","enabled","grid","strokeDashArray","stroke","curve","xaxis","categories","CardSubtitle","Chart","FeedData","title","icon","color","date","Feeds","ListGroup","flush","feed","ListGroupItem","action","href","Button","size","props","concat","bg","earning","subtitle","CardImg","image","CardText","text","BlogData","description","btnbg","Starter","Row","Col","sm","lg","TopCards","xl","xxl","blg","Blog"],"sourceRoot":""}